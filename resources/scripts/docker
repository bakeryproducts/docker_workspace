#!/usr/bin/env python3
import os
import sys
from pathlib import Path

# load module withoout extension, from full path
from importlib.util import spec_from_loader, module_from_spec
from importlib.machinery import SourceFileLoader 
spec = spec_from_loader("depath", SourceFileLoader("depath", "/resources/scripts/depath"))
depath = module_from_spec(spec)
spec.loader.exec_module(depath)
#

def is_valid_folder(path): 
    ws_mnt = Path(os.getenv('WORKSPACE_HOME', '/workspace'))
    return path.exists() and ws_mnt in path.parents


if __name__ == '__main__':
    mount_flag = '-v'
    args = sys.argv
    args[0] = '/usr/bin/docker'

    for i, arg in enumerate(args):
        if arg == mount_flag:
           path_workspace, path_docker = args[i+1].split(':')
           path_workspace = Path(path_workspace)
           if is_valid_folder(path_workspace):
               path_host = depath.complete_path(path_workspace)
               args[i+1] = ':'.join([path_host, path_docker])
           else:
                print(f'{path_workspace} is not a valid path!')
                if '/' not in str(path_workspace): raise Exception
    print(args)
    #sys.exit()
    os.system(' '.join(args))
